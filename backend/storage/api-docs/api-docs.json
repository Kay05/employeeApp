{
    "openapi": "3.0.0",
    "info": {
        "title": "Integration Swagger in Laravel with Passport Auth Documentation",
        "description": "Implementation of Swagger with in Laravel",
        "contact": {
            "email": "admin@admin.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUserList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/user-login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/user-register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password_confirmation",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "not found"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get list of employees",
                "description": "Returns list of employees",
                "operationId": "getEmployeesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            },
            "post": {
                "tags": [
                    "Employees"
                ],
                "summary": "Store new employee",
                "description": "Returns employee data",
                "operationId": "storeEmployee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreEmployeeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/employees/{id}": {
            "get": {
                "tags": [
                    "Employees"
                ],
                "summary": "Get existing Employee",
                "description": "Returns employee data",
                "operationId": "showEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Employees"
                ],
                "summary": "Update existing Employee",
                "description": "Returns updated employee data",
                "operationId": "updateEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Employee id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreEmployeeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Employees"
                ],
                "summary": "Delete existing employee",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteEmployee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Emoployee id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        },
        "/employees/{id}/skill/{skill_id}": {
            "delete": {
                "tags": [
                    "EmployeeSkill"
                ],
                "summary": "Delete employee skill",
                "description": "Deletes an employee skill",
                "operationId": "deleteEmployeeSkill",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Emoployee id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skill_id",
                        "in": "path",
                        "description": "Skill id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Employee": {
                "title": "Employee",
                "description": "Employee model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Auto generated database ",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "employeeID": {
                        "title": "Employee ID",
                        "description": "Assigned employee id",
                        "type": "string",
                        "example": "TD1234"
                    },
                    "first_name": {
                        "title": "First Name",
                        "description": "FirstName of the employee",
                        "type": "string",
                        "example": "Kuda"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "LastName of the employee",
                        "type": "string",
                        "example": "Dhliwayo"
                    },
                    "contact_number": {
                        "title": "Contact Number",
                        "description": "Contact number of the employee",
                        "type": "string",
                        "example": "0112341234"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the employee",
                        "type": "string",
                        "example": "kuda@test.com"
                    },
                    "dob": {
                        "title": "Date of birth",
                        "description": "Employee's date of birth",
                        "type": "string",
                        "format": "date",
                        "example": "1995-01-27"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Employee's home address",
                        "type": "string",
                        "example": "123 William Nicole Drive"
                    },
                    "city": {
                        "title": "City",
                        "description": "Email's city",
                        "type": "string",
                        "example": "Johannesburg"
                    },
                    "postal_code": {
                        "title": "Postal Code",
                        "description": "Employee's Postal Code",
                        "type": "string",
                        "example": "1234"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Employee's country",
                        "type": "string",
                        "example": "South Africa"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-07-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-08-27 17:50:45"
                    },
                    "skills": {
                        "title": "Skills",
                        "description": "Employee's skills model",
                        "type": "array",
                        "items": {
                            "ref": null
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Employee"
                }
            },
            "EmployeeSkills": {
                "title": "EmployeeSkills",
                "description": "EmployeeSkills model",
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the skill",
                        "type": "string",
                        "example": "Dancing"
                    },
                    "experience": {
                        "title": "Experience",
                        "description": "The number of years of experience for a skill",
                        "type": "string",
                        "example": "2"
                    },
                    "rating": {
                        "title": "Seniority Rating",
                        "description": "How the use of the skill is rated",
                        "type": "string",
                        "example": "4"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2020-01-27 17:50:45"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "EmployeeSkills"
                }
            },
            "EmployeeResource": {
                "title": "EmployeeResource",
                "description": "Employee resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {
                            "ref": null
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "EmployeeResource"
                }
            },
            "StoreEmployeeRequest": {
                "title": "Store Employee request",
                "description": "Store Employee request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "id": {
                        "title": "ID",
                        "description": "Auto generated database ",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "employeeID": {
                        "title": "Employee ID",
                        "description": "Assigned employee id",
                        "type": "string",
                        "example": "TD1234"
                    },
                    "first_name": {
                        "title": "First Name",
                        "description": "FirstName of the employee",
                        "type": "string",
                        "example": "Kuda"
                    },
                    "last_name": {
                        "title": "Last Name",
                        "description": "LastName of the employee",
                        "type": "string",
                        "example": "Dhliwayo"
                    },
                    "contact_number": {
                        "title": "Contact Number",
                        "description": "Contact number of the employee",
                        "type": "string",
                        "example": "0112341234"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email address of the employee",
                        "type": "string",
                        "example": "kuda@test.com"
                    },
                    "dob": {
                        "title": "Date of birth",
                        "description": "Employee's date of birth",
                        "type": "string",
                        "format": "date",
                        "example": "1995-01-27"
                    },
                    "address": {
                        "title": "Address",
                        "description": "Employee's home address",
                        "type": "string",
                        "example": "123 William Nicole Drive"
                    },
                    "city": {
                        "title": "City",
                        "description": "Email's city",
                        "type": "string",
                        "example": "Johannesburg"
                    },
                    "postal_code": {
                        "title": "Postal Code",
                        "description": "Employee's Postal Code",
                        "type": "string",
                        "example": "1234"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Employee's country",
                        "type": "string",
                        "example": "South Africa"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-07-27 17:50:45"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at",
                        "type": "string",
                        "format": "datetime",
                        "example": "2021-08-27 17:50:45"
                    },
                    "skills": {
                        "title": "Skills",
                        "description": "Employee's skills model",
                        "type": "array",
                        "items": {
                            "ref": null
                        }
                    }
                },
                "type": "object"
            }
        }
    },
    "security": [
        []
    ]
}